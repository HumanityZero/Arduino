int latchPin = 2;
int dataPin = 3;
int clockPin = 4;
int TIAW = 2;
int C1 = 9;
int C2 = 10;
int C3 = 11;
int C4 = 12;
int dot = 13;
#include <DS3231.h>


// Init the DS3231 using the hardware interface
DS3231  rtc(SDA, SCL);

void setup() {
  pinMode(latchPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(C1, OUTPUT);
  pinMode(C2, OUTPUT);
  pinMode(C3, OUTPUT);
  pinMode(C4, OUTPUT);
  pinMode(dot, OUTPUT);
  rtc.begin();
  //rtc.setTime(22, 13, 0);
  Serial.begin(115200);

}

void loop() {
  char* test = rtc.getTimeStr();
  char* token = strtok(test, ":");
  char* result[3];
  int position = 0;
  while(token) {
    result[position] = token;
    position++;
    //Serial.println(token);
    token = strtok(NULL, ":");
  }
  
  char min2, min1, hour2, hour1;
  //Serial.println(Time);
  hour1=result[0][0];
  hour2=result[0][1];
  min1=result[1][0];
  min2=result[1][1];

//hour2 = ((Time/100)%10);
//hour1 = (Time%1000);
    readout(hour1,1);
    readout(hour2,2);
    readout(min1,3);
    readout(min2,4);
}

void readout(char number, int input_digit){
  delay(TIAW);
  digitalWrite(C1, LOW);
  digitalWrite(C2, LOW);
  digitalWrite(C3, LOW);
  digitalWrite(C4, LOW);
  digitalWrite(dot,HIGH);
  convertBin(number);
  pinCheck(input_digit);

  
}


void pinCheck(int input_number){
  if(input_number==1){
    digitalWrite(C1, HIGH);
    digitalWrite(C2, LOW);
    digitalWrite(C3, LOW);
    digitalWrite(C4, LOW);
    digitalWrite(dot,HIGH);
  }
  if(input_number==2){
    digitalWrite(C1, LOW);
    digitalWrite(C2, HIGH);
    digitalWrite(C3, LOW);
    digitalWrite(C4, LOW);
    digitalWrite(dot,HIGH);
  }
  if(input_number==3){
    digitalWrite(C1, LOW);
    digitalWrite(C2, LOW);
    digitalWrite(C3, HIGH);
    digitalWrite(C4, LOW);
    digitalWrite(dot,LOW);
  }
  if(input_number==4){
    digitalWrite(C1, LOW);
    digitalWrite(C2, LOW);
    digitalWrite(C3, LOW);
    digitalWrite(C4, HIGH);
    digitalWrite(dot,HIGH);
  }
}

void convertBin(char convNum){
  //Serial.println(convNum);
  digitalWrite(latchPin, LOW);
  if(convNum=='0'){
    shiftOut(dataPin, clockPin, MSBFIRST, 64);//( dataPin, clockpin, data)
  }
  else if(convNum=='1'){
    shiftOut(dataPin, clockPin, MSBFIRST, 121);//( dataPin, clockpin, data)
  }
  else if(convNum=='2'){
    shiftOut(dataPin, clockPin, MSBFIRST, 36);//( dataPin, clockpin, data)
  }
  else if(convNum=='3'){
    shiftOut(dataPin, clockPin, MSBFIRST, 48);//( dataPin, clockpin, data)
  }
  else if(convNum=='4'){
    shiftOut(dataPin, clockPin, MSBFIRST, 25);//( dataPin, clockpin, data)
  }
  else if(convNum=='5'){
    shiftOut(dataPin, clockPin, MSBFIRST, 18);//( dataPin, clockpin, data)
  }
  else if(convNum=='6'){
    shiftOut(dataPin, clockPin, MSBFIRST, 2);//( dataPin, clockpin, data)
  }
  else if(convNum=='7'){
    shiftOut(dataPin, clockPin, MSBFIRST, 120);//( dataPin, clockpin, data)
  }
  else if(convNum=='8'){
    shiftOut(dataPin, clockPin, MSBFIRST, 0);//( dataPin, clockpin, data)
  }
  else if(convNum=='9'){
    shiftOut(dataPin, clockPin, MSBFIRST, 24);//( dataPin, clockpin, data)
  }
  digitalWrite(latchPin, HIGH);
}
